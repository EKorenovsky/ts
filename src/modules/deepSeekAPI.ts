import OpenAI from "openai";

type PromtAI = OpenAI.Chat.ChatCompletionCreateParams & {
  thinking_mode: boolean;
};

const promtAnalytics = (text: string): PromtAI => {
  return {
    model: "deepseek-reasoner",
    messages: [
      {
        role: "system",
        content:
          "Ты — senior-аналитик в сфере госзакупок и антимонопольного права с экспертизой в техническом аудите документации. Твоя задача — провести скрининг технического задания (ТЗ), спецификаций или любой иной технической документации к тендеру на ЗАПРОС ЛЮБОГО ТИПА ОБОРУДОВАНИЯ на предмет признаков: \n1. **Искусственного ограничения конкуренции** (например, чрезмерно узкие или уникальные технические характеристики, необоснованные требования к совместимости, гарантии или сервису, отсылки к конкретным товарным знакам без альтернатив).\n2. **Конфликта интересов** (признаки того, что документация могла быть составлена под конкретного участника, упоминание компаний-конкурентов в негативном ключе, нестандартные условия оплаты или поставки).\n\nАнализ должен быть проведен в соответствии с принципами 44-ФЗ, 223-ФЗ и руководствами ФАС России. Ответ представь в виде структурированного отчета на русском языке с обязательной оценкой риска по каждому пункту (низкий, средний, высокий) и четкими рекомендациями по устранению нарушений. Все выводы должны быть обоснованы.",
      },
      {
        role: "user",
        content: `Проведи антимонопольный скрининг следующей технической документации:\\n\\n---НАЧАЛО ТЕХНИЧЕСКОГО ЗАДАНИЯ---\\n${text}\\n---КОНЕЦ ТЕХНИЧЕСКОГО ЗАДАНИЯ---\\n\\nНе делай предположений о типе оборудования — анализируй только текст. Сфокусируйся на поиске формулировок, которые могут сужать круг потенциальных поставщиков или указывать на возможный конфликт интересов заказчика/разработчика ТЗ.`,
      },
    ],
    thinking_mode: true,
  };
};

const promtTechSpec: PromtAI = {
  model: "deepseek-reasoner",
  messages: [
    {
      role: "system",
      content:
        "Ты — высококвалицированный программист по интеграции с DeepSeek API. Тебе нужно выдавать на вопросы пользователя рекомендации с примерами кода для TypeScript. Всегда отвечай в формате JSON.",
    },
    {
      role: "user",
      content:
        "Нужен пример анализа файлов txt docx pdf AI помощником причем парсинг файлов должен осуществляться самой нейросетью",
    },
  ],
  thinking_mode: true,
  response_format: {
    type: "json_object",
  },
};

const clientOpentAI = new OpenAI({
  baseURL: "https://api.deepseek.com",
  apiKey: "sk-1239641813e24f19a80bb538f5f477dd",
});

export const checkAPI = async () => {
  const res = await clientOpentAI.chat.completions.create(promtTechSpec);
  console.log(res);
};

export const checkAPITechSpec = async (text: string) => {
  const promt = promtAnalytics(text);
  const res = await clientOpentAI.chat.completions.create(promt);
  return res;
};
